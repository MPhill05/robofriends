{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/Header.js","containers/App.js","reportWebVitals.js","constants.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchField","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Header","nextProps","nextState","Component","App","useState","setRobots","searchfield","setSearchfield","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","CHANGE_SEARCH_FIELD","initialState","store","createStore","state","action","Object","assign","payload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACI,6BAAKF,IACL,4BAAIC,WCcLK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMlBC,EAdG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIW,aAAW,gBACXX,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCAXK,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,Y,gCCOJC,E,2KATX,SAAsBC,EAAWC,GAC7B,OAAO,I,oBAGX,WACI,OAAO,oBAAIxB,UAAU,KAAd,6B,GANMyB,a,MCoCNC,MA9Bf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACJvB,EADI,KACIwB,EADJ,OAE2BD,mBAAS,IAFpC,mBAEJE,EAFI,KAESC,EAFT,KAIXC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIR,EAAUQ,QAC9B,IAEH,IAIMC,EAAiBjC,EAAOkC,QAAO,SAAAC,GACjC,OAAOA,EAAM1C,KAAK2C,cAAcC,SAASZ,EAAYW,kBAEzD,OAAQpC,EAAOsC,OAGP,sBAAK1C,UAAU,KAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWU,aAZA,SAACiC,GACpBb,EAAea,EAAMC,OAAOC,UAYpB,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzC,OAAQiC,SAN9B,0CCdOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCPDO,EAAsB,sBCE7BC,EAAe,CACjB9C,YAAa,ICOX+C,G,MAAQC,aDJc,WAAwC,IAAvCC,EAAsC,uDAA9BH,EAAcI,EAAgB,uDAAP,GACxD,OAAQA,EAAO/C,MACX,KAAK0C,EACD,OAAOM,OAAOC,OAAO,GAAIH,EAAO,CAAEjD,YAAakD,EAAOG,UAC1D,QACI,OAAOJ,OCCnBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJU,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.a2b04a00.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                            key={i}\r\n                            id={robots[i].id}\r\n                            name={robots[i].name}\r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                aria-label='Search Robots'\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return <h1 className='f1'>RoboFriends</h1>\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport Header from '../components/Header';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [robots, setRobots] = useState([])\r\n    const [searchfield, setSearchfield] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => setRobots(users));\r\n    }, [])\r\n\r\n    const onSearchChange = (event) => {\r\n        setSearchfield(event.target.value)\r\n    }\r\n\r\n    const filteredRobots = robots.filter(robot => {\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    return !robots.length ?\r\n        <h1>Loading</h1> :\r\n        (\r\n            <div className='tc'>\r\n                <Header />\r\n                <SearchBox searchChange={onSearchChange} />\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots} />\r\n                </Scroll>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';","import { CHANGE_SEARCH_FIELD } from './constants.js';\r\n\r\nconst initialState = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, { searchField: action.payload });\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport { searchRobots } from './reducers';\nimport 'tachyons';\n\nconst store = createStore(searchRobots)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}